#############################
#Testing
#############################

# border / titlebar
#new_window normal
#hide_edge_borders vertical
#bindsym Control+Shift+x [class="^.*"] border toggle
#for_window [class="^.*"] border pixel 1
#for_window [class="URxvt"] border normal
#for_window [class="Leafpad"] border normal
#for_window [class="Lxappearance"] border normal
#for_window [class="Vlc"] border pixel 0
#for_window [class="mpv"] border pixel 0
#for_window [class="Pcmanfm"] border pixel 0
#for_window [class="Firefox"] border pixel 0
#for_window [class="Geary"] border pixel 0
#for_window [class="Lmms"] border pixel 0
#for_window [class="Feh"] border pixel 0

# Kill all open windows
#xdotool search "" windowkill %@

#bindsym $COMMAND + Y exec --no-startup-id i3-battery-popup
#for_window [title="Battery Warning"] sticky enable

#bindsym SUPER_L + Y exec notify-send "TESTE COM O SUPER"
#bindsym ISO_Level3_Shift exec notify-send "TESTE COM O ALTGR"

# Rofi
#bindsym $mod+d exec rofi -show drun -eh 2 -bw 0 

# Start rofi widgets
#bindsym $mod+n exec /home/eloy/Downloads/sc/powermenu.sh 
#bindsym $mod+m exec /home/eloy/Downloads/sc/network.sh

# Lock screen
#set $Locker ~/.config/i3/matrixlock.py 1 & sleep 1

#set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
#mode "$mode_system" {
    #bindsym l exec --no-startup-id $Locker, mode "default"
    #bindsym e exec --no-startup-id i3-msg exit, mode "default"
    #bindsym s exec --no-startup-id $Locker && systemctl suspend, mode "default"
    #bindsym h exec --no-startup-id $Locker && systemctl hibernate, mode "default"
    #bindsym r exec --no-startup-id systemctl reboot, mode "default"
    #bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"  

    ## back to normal: Enter or Escape
    #bindsym Return mode "default"
    #bindsym Escape mode "default"
#}

#bindsym $mod+Pause mode "$mode_system"
#bindsym --release XF86PowerOff mode "$mode_system"

#"90:class_g = 'jetbrains-pycharm-ce'",

## Orientation for new workspaces (horizontal|vertical|auto)
#default_orientation auto

## Screenshot
#bindsym Print exec --no-startup-id xfce4-screenshooter
#bindsym Print exec --no-startup-id i3-scrot
#bindsym $mod+Print --release exec --no-startup-id i3-scrot -w
#bindsym $mod+Shift+Print --release exec --no-startup-id i3-scrot -s

## AutoLock
#exec --no-startup-id xautolock -time 10 -locker blurlock

## Keyboard layout
#exec --no-startup-id setxkbmap -model abnt2 -layout br -variant abnt2

## Touchpad
#exec --no-startup-id xinput set-prop "SynPS/2 Synaptics Touchpad" "libinput Tapping Enabled" 1

# Apps to be searched about
#exec $myTerm -e lynx -cfg=~/.lynx.cfg -lss=~/.lynx.lss http://www.distrowatch.com
#exec $myTerm -e sh ./scripts/googler-script.sh
#exec $myTerm -e newsboat
#exec $myTerm -e rtv
#exec $myTerm -e neomutt
#exec $myTerm -e twitch-curses
#exec $myTerm -e sh ./scripts/haxor-news.sh
#exec $myTerm -e toot curses
#exec $myTerm -e sh ./scripts/tig-script.sh
#exec $myTerm -e vifm
#exec $myTerm -e joplin
#exec $myTerm -e cmus
#exec $myTerm -e irssi
#exec $myTerm -e rtorrent
#exec $myTerm -e youtube-viewer
#exec $myTerm -e ncpamixer
#exec $myTerm -e calcurse
#exec $myTerm -e vim /home/dt/.i3/config
#exec $myTerm -e htop
#exec $myTerm -e gtop
#exec $myTerm -e nmon
#exec $myTerm -e glances
#exec $myTerm -e s-tui
#exec $myTerm -e httping -KY --draw-phase localhost
#exec $myTerm -e cmatrix -C cyan
#exec $myTerm -e pianobar
#exec $myTerm -e wopr report.xml

#This is one goes to the -1 workspace
#bindsym $_CUSTOM_ALTERNATIVE + $_ARROW_LEFT workspace switch_to_empty_workspaces

#Nitrogen
#xfce4-sreenshoot
#i3_help do Manjaro

# Keybinds

## Worked
#keycode 246 = XF86WLAN NoSymbol XF86WLAN
#bindcode $COMMAND + 246 exec notify-send "XF86WLAN BUTTON HAS BEEN PRESSED"

## Not worked
#keycode 199 = XF86TouchpadToggle NoSymbol XF86TouchpadToggle
#bindcode $COMMAND + 199 exec notify-send "XF86TouchpadToggle BUTTON HAS BEEN PRESSED"

#keycode 200 = XF86TouchpadOn NoSymbol XF86TouchpadOn
#bindcode $COMMAND + 200 exec notify-send "XF86TouchpadOn BUTTON HAS BEEN PRESSED"

#keycode 201 = XF86TouchpadOff NoSymbol XF86TouchpadOff
#bindcode $COMMAND + 201 exec notify-send "XF86TouchpadOff BUTTON HAS BEEN PRESSED"

#keycode 203 = Mode_switch NoSymbol Mode_switch
#bindcode $COMMAND + 203 exec notify-send "Mode_switch BUTTON HAS BEEN PRESSED"
#bindcode $COMMAND + 108 + A exec notify-send "Mode_switch BUTTON HAS BEEN PRESSED"

#bindcode $COMMAND + 92 exec notify-send "XF86WLAN BUTTON HAS BEEN PRESSED WITH ALT GR"
#bindcode $COMMAND + $ALTGR exec notify-send "ALT_GR BUTTON HAS BEEN PRESSED"

# MPV floating and sticky
#for_window [class="^mpv"] floating enable resize set 360 240
#for_window [class="^mpv"] sticky enable
#for_window [class="^mpv"] border pixel 0
#no_focus [class="^mpv"]

# Scratchpad
#There are two commands to use any existing window as scratchpad window. move scratchpad will move a window to the scratchpad workspace. This will make it invisible until you show it again.
#Show the next scratchpad window or hide the focused scratchpad window. If there are multiple scratchpad windows, this command cycles through them.

#Make the currently focused window a scratchpad
#bindsym $mod+Shift+minus move scratchpad
#bindsym $mod + Shift + y move scratchpad

#Show the first hidden scratchpad window
#bindsym $mod+minus scratchpad show
#bindsym $mod + Y scratchpad show

# Screens outputs - Works
#bindsym $mod+comma focus output left
#bindsym $mod+Shift+comma move workspace to output left
#bindsym $mod+period focus output right
#bindsym $mod+Shift+period move workspace to output right

#bindsym XF86TouchpadToggle exec ~/.local/bin/toggletouchpad.sh # toggle touchpad
#bindsym XF86TouchpadToggle exec notify-send "Toggle touchpad"
#bindsym $COMMAND + XF86TouchpadToggle exec notify-send "Toggle touchpad with Command"

#bindcode $COMMAND + 199 exec notify-send "Toggle touchpad with Command"

# Screenshot

## Screenshot of entire desktop
#bindsym $mod+F4       exec --no-startup-id scrot -e 'feh $f -x' -d 2
## Screenshot of focused window
#bindsym $mod+Shift+F4 exec --no-startup-id scrot -u -e 'feh $f -x' 

# Transparency for compton: make full opaque/100% 
##bindsym --release $mod+Shift+S exec --no-startup-id notify-send "Select window to make opaque" && compton-trans -s 100

# Windows
#Change focus between tiling / floating windows
#bindsym $mod+Shift+Tab focus mode_toggle

# Workspace

## Navigate workspaces next / previous
#bindsym $mod+Ctrl+Right workspace next
#bindsym $mod+Ctrl+Left workspace prev

## Move a window to a specific workspace and immediately switch to that workspace
#bindsym $mod+x move container to workspace 3; workspace 3

#ALT+TAB/SHIFT for changing to the lastest window
#SUPER+ALT+TAB/SHIFT for changing to the lastest workspace
#SUPER+ALT+ARROW for changing to the prev/next workspace

#Workspace back and forth (with/without active container)
#workspace_auto_back_and_forth yes
#bindsym $mod+b workspace back_and_forth
#bindsym $mod+Shift+b move container to workspace back_and_forth; workspace back_and_forth

## Move workspace between screens
#bindsym $mod+Ctrl+Left move workspace to output left
#bindsym $mod+Ctrl+Right move workspace to output right

## Switch between the current and the previously focused one
## Shift moves, without shift just go
#bindsym $mod+y workspace back_and_forth
#bindsym $mod+Shift+y move container to workspace back_and_forth

## Move the whole workspace to the next output
#bindsym $mod+x move workspace to output right

# Set explorer features

#i3-nagbar -m 'You have an error in your i3 config file!' -b 'edit config' 'i3-sensible-editor ~/.config/i3/config'
#set $explorer_menu exec "i3-nagbar -m 'You have an error in your i3 config file!' -b 'edit config' 'i3-sensible-editor ~/.config/i3/config'"
#set $explorer_menu exec i3-nagbar -m 'You have an error in your i3 config file!' -b 'edit config' 'i3-sensible-editor ~/.config/i3/config'

# Hacking the nagbar (sort of…)
#i3-nagbar is meant to show messages you can’t ignore (that’s the “nag” part): it is invoked when closing i3 (orange) and when configuration files contain errors (red). Basically it provides user-defined “action buttons” we might use for several different tasks (I’ll list a few here):
#(yet another) launcher for a small group of frequently used application reminder to perform system maintenance actions (updates, cache cleaning, …), possibly cron‘d shortcut to view/edit specific files (example shown below).

#bindsym $mod+l exec "i3-nagbar -t warning -m 'Edit system files' -b 'config' 'exec mousepad ~/.i3/config' -b 'i3status' 'exec mousepad ~/.i3/config'"
#A quick look at the man page explains the trick: “-t ” is the message type (warning/orange or error/red, we’ll likely use the first one), “-m ” is the message at the beginning, each queued “-b '' ''” creates a button linked to the intended action (the “X” button to close the bar is drawn by default).
#The only downside of i3-nagbar is that it is only mouse-driven: no keyboard shortcuts to select/activate buttons and close it (that’s still the “nag” part).

#set $TESTE "i3-nagbar -m 'Nautilus' -b 'edit config' 'nautilus'"
#bindsym $COMMAND + Y exec $TESTE

#$_RANGER urxvt -e ranger
#set $TESTE "i3-nagbar -m 'Nautilus' -b 'Nautilus' 'nautilus' -b 'Ranger' 'urxvt -e ranger'"

#WORKED
#set $TESTE "i3-nagbar -m 'Nautilus' -b 'Nautilus' 'nautilus' -b 'Ranger' '$_RANGER'"
#bindsym $COMMAND + Y exec $TESTE


//██╗   ██╗██╗███████╗██╗   ██╗ █████╗ ██╗         ███████╗████████╗██╗   ██╗██████╗ ██╗ ██████╗      ██████╗ ██████╗ ██████╗ ███████╗
//██║   ██║██║██╔════╝██║   ██║██╔══██╗██║         ██╔════╝╚══██╔══╝██║   ██║██╔══██╗██║██╔═══██╗    ██╔════╝██╔═══██╗██╔══██╗██╔════╝
//██║   ██║██║███████╗██║   ██║███████║██║         ███████╗   ██║   ██║   ██║██║  ██║██║██║   ██║    ██║     ██║   ██║██║  ██║█████╗  
//╚██╗ ██╔╝██║╚════██║██║   ██║██╔══██║██║         ╚════██║   ██║   ██║   ██║██║  ██║██║██║   ██║    ██║     ██║   ██║██║  ██║██╔══╝  
// ╚████╔╝ ██║███████║╚██████╔╝██║  ██║███████╗    ███████║   ██║   ╚██████╔╝██████╔╝██║╚██████╔╝    ╚██████╗╚██████╔╝██████╔╝███████╗
//  ╚═══╝  ╚═╝╚══════╝ ╚═════╝ ╚═╝  ╚═╝╚══════╝    ╚══════╝   ╚═╝    ╚═════╝ ╚═════╝ ╚═╝ ╚═════╝      ╚═════╝ ╚═════╝ ╚═════╝ ╚══════╝

{
	//Light mode
	"workbench.colorTheme": "GitHub Light", //Awesome for cutyards.
	
	//"workbench.colorTheme": "Default Light+",
	
	//Night mode
	"workbench.colorTheme": "Midnight City", //Awesome for indoor mainly for using after midnight.

	//"workbench.colorTheme": "Default Dark+",
	//"workbench.colorTheme": "Dracula", //Awesome for indoor mainly sunset.
	//"workbench.colorTheme": "Dracula Soft",
	//"workbench.colorTheme": "GitHub Dark",
	
	//Configura a janela "fisica" do Visual Studio Code:
	"window.newWindowDimensions": "offset",
	"window.titleBarStyle": "custom",
	"window.title": "@henrikbeck95: ${dirty}${activeEditorShort}${separator}${rootName}${separator}${appName}",

	//Organizacao do layout de ferramentas:
	"workbench.editor.tabSizing": "fit",
	"window.menuBarVisibility": "visible",
	"workbench.sideBar.location": "right",
	"workbench.activityBar.visible": true, //Barra lateral de atividade
	"workbench.statusBar.visible": true, //Barrinha azul no canto inferior da tela.
	"workspaceExplorer.workspaceStorageDirectory": "C:\\Users\\henrikbeck95\\Documents\\.vscode", //Extensao Workspace Explore:

 	//Aplica um sinal visual na esquerda da linha selecionada:
	"editor.renderLineHighlight": "gutter",
	
	//Define o tema dos icones na sidebar:
	"workbench.iconTheme": "material-icon-theme",
	
	//Configura tamanho e familia da fonte:
	"editor.fontSize": 14,
	"editor.lineHeight": 20,
	//"editor.fontFamily": "",
	//"editor.fontFamily": "Source Code Pro Medium",
	//"editor.fontFamily": "MesloLGS NF",
	//"editor.fontFamily": "MesloLGM Nerd Font",
	//"editor.fontFamily": "Fira Code",
	//"editor.fontFamily": "Fira Code Regular",
	"editor.fontFamily": "FiraCode Nerd Font",
	//"editor.fontFamily": "FiraCode Nerd Font Mono",
	"editor.fontLigatures": true,
	"explorer.compactFolders": false,
	
	//Configuracao de inicializacao e armazenamento local:
	//"files.defaultLanguage": "plaintext",
	"files.defaultLanguage": "markdown",
	"workbench.startupEditor": "none",
	"editor.tabSize": 4,
	"window.zoomLevel": 0,
	"workbench.commandPalette.history": 10, //Capacidade de armazenamento do ctrl + shift + P (default = 50):
	"files.autoSave": "off",
	"explorer.confirmDragAndDrop": false, //Pergunta para abrir um arquivo que foi arrastado ate a tela.
	"explorer.confirmDelete": false, //Pargunta para confirmar a exclusao de um arquivo.
	"javascript.updateImportsOnFileMove.enabled": "always", //Atualiza a referencia do diretorio do arquivo automaticamente.
	"typescript.updateImportsOnFileMove.enabled": "always", //Atualiza a referencia do diretorio do arquivo automaticamente.

	//Formatacao do estilo de codigo do arquivo:
	"editor.comments.insertSpace": false,
	"files.insertFinalNewline": false, //Espacos em brancos no final da linha
	"files.trimFinalNewlines": false, //Ultima linha do arquivo deve ser branca
	
	//Quebra a linha quando chega no final da tela:
	"editor.wordWrap": "bounded", //Muda uma linha muito grande para a linha de baixo.
	"editor.wordWrapColumn": 140, //Controls the wrapping column of the editor when `editor.wordWrap` is 'wordWrapColumn' or 'bounded'.
	"editor.wrappingIndent": "indent", //Identacao automatica.

	//Aplica linhas verticais para lembrar de quebrar linha em oódigos muito grandes:
	"editor.formatOnSave": false,
	"editor.rulers": [
		100,
		130,
		140
	],

	// Controls the wrapping column of the editor when `editor.wordWrap` is 'wordWrapColumn' or 'bounded'.
	//"editor.autoIndent": ,
	//"editor.detectIndentation": true,
	//"editor.defaultFormatter": ,
	//"editor.maxTokenizationLineLength": 20000,
	//"editor.lineNumbers": "off",
	"editor.lineNumbers": "on",
	//"editor.lineNumbers": "relative",
	//"editor.letterSpacing": 0,
	//"editor.": null,

	// Maximum amount of characters per line (0 = disable).
	"html.format.wrapLineLength": 0,
	"liveServer.settings.donotShowInfoMsg": true,

	//Source code side cverview
    //"editor.minimap": "false",
    "editor.minimap": "true",

    //Terminal integrado:
    "terminal.integrated.fontSize": 14,

    //"terminal.integrated.fontFamily": "",
    //"terminal.integrated.fontFamily": "monospace",

    //"terminal.integrated.fontFamily": "Fantasque Sans Mono",
    "terminal.integrated.fontFamily": "mononoki",

    //"terminal.integrated.fontFamily": "Cascadia Mono",
    //"terminal.integrated.fontFamily": "Hack",

    //"terminal.integrated.fontFamily": "MesloLGS NF",
    //"terminal.integrated.fontFamily": "MesloLGM Nerd Font",
    //"terminal.integrated.fontFamily": "Meslo LG M DZ for Powerline",
    
    //"terminal.integrated.fontFamily": "Fira Code",
    //"terminal.integrated.fontFamily": "FiraCode Nerd Font Mono",

    "terminal.integrated.cursorStyle": "line",
    "terminal.integrated.fontWeight": "normal",
    
    //Linux
    //"terminal.integrated.shell.linux": "/bin/bash",
    //"terminal.integrated.shell.linux": "/bin/zsh",
    //"terminal.external.linuxExec": "xterm",
    //"terminal.external.linuxExec": "/usr/bin/alacritty",
    
    //Linux (Flatpaks):
    ///app/share/ide-flatpak-wrapper/README.md
    "terminal.integrated.shell.linux": "/usr/bin/env",
    "terminal.integrated.shellArgs.linux": ["--", "flatpak-spawn", "--host", "bash"]

    //MacOS
    //"terminal.integrated.shell.osx": "/bin/zsh",
    //"terminal.integrated.shell.osx": "/bin/bash",
    //"terminal.external.osxExec": "Terminal.app",
    
    //Windows
    "terminal.integrated.shellArgs.windows": ["-1"],
    //"terminal.integrated.shell.windows": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe",
    //"terminal.integrated.shell.windows": "C:\\Windows\\System32\\cmd.exe",
    "terminal.integrated.shell.windows": "C:\\Program Files\\Git\\bin\\bash.exe",
    //"terminal.external.windowsExec": "%COMSPEC%",
    //"terminal.external.windowsExec": "C:\\Program Files\\Git\\bin\\bash.exe",    //Gerenciamento de extensoes e ignorar suas recomendacoes:
	"extensions.ignoreRecommendations": true,
	
	//Atualizacao de extensoes:
	"extensions.autoCheckUpdates": true,
	"extensions.autoUpdate": true,
	
	//Extensao GitLens:
	"gitlens.codeLens.recentChange.enabled": false,
	"gitlens.codeLens.authors.enabled": false,
	"gitlens.codeLens.enabled": false,

	//Extensao LiveShare:
	"liveshare.featureSet": "insiders",

	//Automatizacao de codigo:
	"html.suggest.html5": true, //Habilita ajuda ao digitar html e construoi a estrutura basica:
	
	//Javascript:
	"javascript.suggest.autoImports": false,

	//Standard coding:
	"javascript.format.placeOpenBraceOnNewLineForControlBlocks": true, 
	"javascript.format.placeOpenBraceOnNewLineForFunctions": true,
	//"typescript.format.placeOpenBraceOnNewLineForControlBlocks": true,
	//"typescript.format.placeOpenBraceOnNewLineForFunctions": true,
	
	/*
	//Extensao ESLint (ainda nao esta instalado):
	"eslint.packageManager": "yarn",
	"[javascript]": {
		"editor.codeActionsOnSave": {
		"source.fixAll.eslint": true,
		}
	},
	"[javascriptreact]": {
		"editor.codeActionsOnSave": {
		"source.fixAll.eslint": true,
		}
	},
	"[typescript]": {
		"editor.codeActionsOnSave": {
		"source.fixAll.eslint": true,
		}
	},
	"[typescriptreact]": {
		"editor.codeActionsOnSave": {
		"source.fixAll.eslint": true,
		}
	},
	*/
	
	//Extensao PHP Intelephense && extensao PHP IntelliSense:
	"php.validate.executablePath": "C:\\xampp\\php\\php.exe",

	//Phpfmt - PHP formatter:
	"phpfmt.php_bin": "C:/xampp/php/php.exe", //PHP executable path
	"phpfmt.detect_indent": true,
	"phpfmt.psr1": false,
	"phpfmt.psr1_naming": false,
	"phpfmt.psr2": false,
	"phpfmt.indent_with_space": 4,
	"phpfmt.enable_auto_align": false,
	"phpfmt.visibility_order": false,
	"phpfmt.passes": [], //Call specific compiler pass
	"phpfmt.exclude": [], //Disable specific passes
	"phpfmt.smart_linebreak_after_curly": true, //Convert multistatement blocks into multiline blocks
	"phpfmt.yoda": false, //Yoda-style comparisons
	"phpfmt.cakephp": false, //	Apply CakePHP coding style
	"phpfmt.custom_arguments": "", //Provide custom arguments to overwrite default arguments generated by config
	
	//PHP Intelephense
	"intelephense.files.maxSize": 1000000,	//Maximum file size in bytes.
	"intelephense.completion.maxItems": 100, //The maximum number of completion items returned per request.	100
	"intelephense.format.enable": false,
	"intelephense.environment.documentRoot": "", //The directory of the entry point to the application (index.php).
	"intelephense.environment.includePaths": [], //The include paths (as individual path items) as defined in the include_path ini setting.
	"intelephense.environment.phpVersion": "7.4.0", //A semver compatible string that represents the target PHP version.
	"intelephense.diagnostics.enable": true,
	"intelephense.diagnostics.run": "onType",
	"intelephense.diagnostics.embeddedLanguages": true,
	"intelephense.diagnostics.undefinedSymbols": true,
	"intelephense.diagnostics.undefinedVariables": true,
	"intelephense.diagnostics.undefinedTypes": true,
	"intelephense.diagnostics.undefinedFunctions": true,
	"intelephense.diagnostics.undefinedConstants": true,
	"intelephense.diagnostics.undefinedClassConstants": true,
	"intelephense.diagnostics.undefinedMethods": true,
	"intelephense.diagnostics.undefinedProperties": true,
	"intelephense.diagnostics.unusedSymbols": true,
	"intelephense.diagnostics.unexpectedTokens": true,
	"intelephense.diagnostics.duplicateSymbols": true,
	"intelephense.diagnostics.argumentCount": true,
	"intelephense.diagnostics.typeErrors": true,
	"intelephense.diagnostics.deprecated": true, //Enables deprecated diagnostics.
	"intelephense.runtime": "", //Path to a Node.js executable. Use this if you wish to use a different version of Node.js.
	"intelephense.licenceKey": "", //DEPRECATED. Don't use this. Go to command palette and search for enter licence key.
	"intelephense.phpdoc.returnVoid": true, //Adds or omits `@return void` from auto generated phpdoc.
	"intelephense.phpdoc.textFormat": "snippet",
	"intelephense.phpdoc.useFullyQualifiedNames": false, //Fully qualified names will be used for types when true.
	"intelephense.trace.server": "off", //Traces the communication between VSCode and the intelephense language server.
	"intelephense.completion.insertUseDeclaration": true, //Use declarations will be automatically inserted for namespaced classes, traits, interfaces, functions, and constants.
	"intelephense.completion.fullyQualifyGlobalConstantsAndFunctions": false, //Global namespace constants and functions will be fully qualified (prefixed with a backslash).
	"intelephense.completion.triggerParameterHints": true, //Method and function completions will include parentheses and trigger parameter hints.
	"intelephense.maxMemory": 0, //Maximum memory (in MB) that the server should use. On some systems this may only have effect when runtime has been set. Minimum 256.
	"intelephense.telemetry.enabled": false, //Anonymous usage and crash data will be sent to Azure Application Insights. Inherits from telemetry.enableTelemetry.
	//Configure glob patterns to make files available for language server features. Inherits from files.associations.
	"intelephense.files.associations": [
		"*.php",
		"*.phtml"
	],
	//Configure glob patterns to exclude certain files and folders from all language server features. Inherits from files.exclude.	
	"intelephense.files.exclude": [
		"**/.git/**",
		"**/.svn/**",
		"**/.hg/**",
		"**/CVS/**",
		"**/.DS_Store/**",
		"**/node_modules/**",
		"**/bower_components/**",
		"**/vendor/**/{Tests,tests}/**"
	],
	//Configure stub files for built in symbols and common extensions. The default setting includes PHP core and all bundled extensions.
	"intelephense.stubs":[
		"apache",
		"bcmath",
		"bz2",
		"calendar",
		"com_dotnet",
		"Core",
		"ctype",
		"curl",
		"date",
		"dba",
		"dom",
		"enchant",
		"exif",
		"FFI",
		"fileinfo",
		"filter",
		"fpm",
		"ftp",
		"gd",
		"gettext",
		"gmp",
		"hash",
		"iconv",
		"imap",
		"intl",
		"json",
		"ldap",
		"libxml",
		"mbstring",
		"meta",
		"mysqli",
		"oci8",
		"odbc",
		"openssl",
		"pcntl",
		"pcre",
		"PDO",
		"pdo_ibm",
		"pdo_mysql",
		"pdo_pgsql",
		"pdo_sqlite",
		"pgsql",
		"Phar",
		"posix",
		"pspell",
		"readline",
		"Reflection",
		"session",
		"shmop",
		"SimpleXML",
		"snmp",
		"soap",
		"sockets",
		"sodium",
		"SPL",
		"sqlite3",
		"standard",
		"superglobals",
		"sysvmsg",
		"sysvsem",
		"sysvshm",
		"tidy",
		"tokenizer",
		"xml",
		"xmlreader",
		"xmlrpc",
		"xmlwriter",
		"xsl",
		"Zend OPcache",
		"zip",
		"zlib"
	],
	//Glob patterns to exclude files and folders from having symbols renamed.
	"intelephense.rename.exclude": [
		"**/vendor/**"
	],
	//An object that describes the format of generated class/interface/trait phpdoc.
	"intelephense.phpdoc.classTemplate": {
		"summary": "$1",
		"tags": [
			"@package ${1:$SYMBOL_NAMESPACE}"
		]
	},
	//An object that describes the format of generated property phpdoc.
	"intelephense.phpdoc.propertyTemplate": {
		"summary": "$1",
		"tags": [
			"@var ${1:$SYMBOL_TYPE}"
		]
	},
	//An object that describes the format of generated function/method phpdoc. The following snippet variables are available: SYMBOL_NAME; SYMBOL_KIND; SYMBOL_TYPE; SYMBOL_NAMESPACE.	[object Object]
	"intelephense.phpdoc.functionTemplate": {
		"summary": "$1",
		"tags": [
			"@param ${1:$SYMBOL_TYPE} $SYMBOL_NAME $2",
			"@return ${1:$SYMBOL_TYPE} $2",
			"@throws ${1:$SYMBOL_TYPE} $2"
		]
	},

	//Extensao SQLTools:
	"sqltools.disableReleaseNotifications": false,
	"sqltools.autoConnectTo": [],
	"sqltools.telemetry": false,
	"sqltools.showStatusbar": true,
	"sqltools.historySize": 30,
	"sqltools.completionLanguages": ["sql"],
	"sqltools.formatLanguages": ["sql"],
	"sqltools.codelensLanguages": ["sql"],
	"sqltools.format": {},
	//"sqltools.queryParams.enableReplace": false,
	"sqltools.queryParams.regex": "\\$[\\d]+|\\$\\[[\\d\\w]+\\]",
	"sqltools.results": {},
	"sqltools.tableTreeItemsExpanded": false,
	//"sqltools.defaultExportType": "csv",
	"sqltools.defaultExportType": "json",
	//"sqltools.defaultExportType": "prompt", //Default
	"sqltools.useNodeRuntime": false,
	"sqltools.languageServerEnv": {},
	"sqltools.sortColumns": "name",
	"sqltools.flattenGroupsIfOne": false,
	"sqltools.autoOpenSessionFiles": true,
	"sqltools.connections": [
		{
			"askForPassword": true,
			"database": "epiz_25390459_math_health",
			"dialect": "MySQL",
			"name": "MySQL - Math Health",
			"port": 3306,
			"server": "localhost",
			"username": "root"
		}
		
		/*
		{
			"askForPassword": true,
			"database": "$nomeBancoDados",
			"dialect": "MySQL",
			"name": "MySQL - $apelidoParaMelhorIdentificacao",
			"port": 3306,
			"server": "localhost",
			"username": "root",
			"password": ""
		}
		*/
	],
	"sqltools.dependencyManager": {
		"packageManager": "npm",
		"installArgs": [
			"install"
		],
		"runScriptArgs": [
			"run"
		],
		"autoAccept": false
	},
	
	//Importado da equipe do Rocketseat:
	"breadcrumbs.enabled": true,
	"git.enableSmartCommit": true,
	"editor.parameterHints.enabled": false,
	"terminal.integrated.shell.osx": "/bin/zsh",
	"files.associations": {
		".sequelizerc": "javascript",
		".stylelintrc": "json",
		".prettierrc": "json"
	},
	"emmet.syntaxProfiles": {
		"javascript": "jsx",
	},
	"emmet.includeLanguages": {
		"javascript": "javascriptreact",
	},
	"[javascript]": {
		"editor.defaultFormatter": "HookyQR.beautify"
	},
	"[html]": {
		"editor.defaultFormatter": "HookyQR.beautify"
	},

	//Code Runner:
	"code-runner.clearPreviousOutput": true,
	"code-runner.saveFileBeforeRun": false,
	"code-runner.saveAllFilesBeforeRun": false,
	"code-runner.showExecutionMessage": true,
	"code-runner.runInTerminal": true,
	"code-runner.enableAppInsights": false, //Telemetry data
	"code-runner.defaultLanguage": "javascript",
	
	//code-runner.terminalRoot: For Windows system, replaces the Windows style drive letter in the command with a Unix style root when using a custom shell as the terminal, like Bash or Cgywin. Example: Setting this to /mnt/ will replace C:\path with /mnt/c/path (Default is "")
	
	//code-runner.temporaryFileName: Temporary file name used in running selected code snippet. When it is set as empty, the file name will be random. (Default is "tempCodeRunnerFile")

	//Making sure the executor PATH of each language is set in the environment variable.
	//"code-runner.executorMap": {
        //"javascript": "node",
        //"php": "C:\\php\\php.exe",
        //"python": "python",
        //"perl": "perl",
        //"ruby": "C:\\Ruby23-x64\\bin\\ruby.exe",
        //"go": "go run",
        //"html": "\"C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\"",
        //"java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
        //"c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt"
	//},
	
	//Set the executor per file extension:
    //"code-runner.executorMapByFileExtension": {
    //    ".vbs": "cscript //Nologo"
    //}

}

